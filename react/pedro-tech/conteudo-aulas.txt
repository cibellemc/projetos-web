---- Introduction

* Focus on UI
* Rich ecossystem
* Created and maintained by Facebook
* Component based architecture: reusable
* Declarative: tell what you want and React will build
* filter, map e reduce, arrow functions, template literals, default parameters
* só um html no public, um index.js no src, que renderiza no html o componente App


---- JSX, Components, Props

* função que retorna html
* extensão de sintaxe, permite escrever HTML no js p/ criar UI

const name = 'John';
const element = <h1>Hello, {name}!</h1>;

* mais que uma linha na variável bota ()

* component: 
	- javascript function that returns UI/JSX
	- capital letter

* não faz diferença usar arrow ou a tradicional

const User = () => { return <div> <h1>Cibelle</h1> <h1>cibelle@example.com</h1> <h1>19</h1> </div> }

function User() { return ( <div> <h1>Cibelle</h1> <h1>cibelle@example.com</h1> <h1>19</h1> </div>); }

* props são como json, podendo ser imaginadas assim:

const props = {
	name: "Pedro",
	age: 21,
	email: "pedro@pedro.com
}

* passamos props como argumento da função e usamos {}, como se chamasse uma variável 

const User = (props) => {
  return (
    <div>
      <h1>{props.name}</h1>
      <h1>{props.email}</h1>
      <h1>{props.age}</h1>
    </div>
  );
}

* na chammada do componente passa os argumentos. idade entre chaves e string entre aspas
